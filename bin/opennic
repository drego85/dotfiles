#!/usr/bin/env bash
#
# This script prints to the standard output the four closest DNS server from
# OpenNIC DNS resolvers network.
#
# Copyright (c) 2019 Emanuele Petriglia <inbox@emanuelepetriglia.com>
# All rights reserved. This file is licensed under the MIT license.

# Program's name.
readonly PROGRAM="${0##*/}"

# User given command.
readonly COMMAND="$1"

# Default exit codes.
readonly EXIT_SUCCESS=0
readonly EXIT_FAILURE=1

readonly OPENIC_ENDPOINT="https://api.opennic.org/geoip/"

# Print all arguments to the standard error and exits with error code 1.
error() {
  echo "ERROR: $*" >&2
  exit "$EXIT_FAILURE"
}

# It prints to the standard output an help message with usage instructions.
show_help() {
  cat <<-_EOF
Usage:
    $PROGRAM [--ipv4|-4] [--ipv6|-6] [--help|-h]

  This script prints to the standard output your four closest DNS servers from
  the OpenNIC DNS resolvers network. Without options it prints IPv4 and IPv6 DNS
  closest servers.

Options:
    --ipv4, -4
        Prints only IPv4 DNS servers.

    --ipv6, -6
        Prints only IPv6 DNS servers.

    --help, -h
        Prints this text.

This script uses 'curl', it must be installed on the system.
_EOF
}

opennic_get_dns() {
  local ip_version="$1"

  echo "Closest IPv$ip_version (IP, name and reliability):"

  curl "$OPENIC_ENDPOINT?list&res=4&ipv=$ip_version"

  echo
}

# Check the number of given arguments.
(( $# > 1 )) && error "You can give only one option."

[[ -z "$(command -v curl)" ]] && error "curl is needed to run this script."

case "$COMMAND" in
  --ipv4|-4) shift;         opennic_get_dns "4" ;;
  --ipv6|-6) shift;         opennic_get_dns "6" ;;
  --help|-h) shift;         show_help ;;
  *) shift;                 opennic_get_dns "4"; opennic_get_dns "6" ;;
esac

exit "$EXIT_SUCCESS"
